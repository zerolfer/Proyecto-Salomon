#######################################################
###   FICHERO DE PROPIEDADES DEL ALGORITMO A USAR   ###
#######################################################

## Propiedad que cambia el algoritmo de ejecucion
## Actualmente están implementados:
##   - SA (Simulated Annealing)
##   - VNS (Variable Neighborhood Search)
algoritmo=VNS

##Posibles valores:
# - reduccionControladoresAIS
# - OnlyConstrains
# - reduccionControladoresYRestricciones   ( ANTIGUO )
# - fitGlobal
# - reduccionControladoresYRestriccionesYSimilitudYContinuidad  ( NUEVA )
#       -> Reducir controladores
#       -> Reducir incumplimiento de restricciones
#       -> Aumentar similitud a los estadillos
#       -> Procurar continuidad al momento del cambio
funcionFitnessFase2=reduccionControladoresYRestriccionesYSimilitudYContinuidad
funcionFitnessFase3=fitGlobal

## Ponderaciones de los fitness
##
## Fitness1:
## Fitness2:
## Fitness3:
## Fitness3:
ponderacionFitness1=0.4
ponderacionFitness2=0.6
ponderacionFitness3=0
ponderacionFitness4=0


###                     ###
##  SIMULATED ANNEALING  ##
###                     ###

##Temperatura
temperaturaInicial=0.075
descensoTemperatura=0.925
iteracionesTemperatura=3000

##Condiciones de parada
condicionParadaPorcent=0.035
condicionParadaCiclos=50000
condicionParadaNumeroMejoras=0.02

##Generación de soluciones del entorno (Movs en desuso)
pseudoAleatorio=normal
desviacionTipica=15
##Esta escrito en minutos despues se debera dividir entre el tamaño de slot para conseguir el numero de slots

##tamaño maximo y minimo de los movimientos que generan soluciones del entorno
tamañoMaxMov=60
tamañoMinMov=10

##Posibles valores: movimiento1,2,3,4,5 - En la clase DeciderMove esta explicado el funcionamiento de los movimientos y sus diferencias
movimientosEntorno=movimiento6

movimientosEntornoGreedy=movimientoGreedy2
porcentajeEleccionMov=0.10


###                            ###
## VARIABLE NEIGHBORHOOD SEARCH ##
###                            ###

# TODO


# Tiempo máximo total que le permitimos al VNS ejecutarse,
# puesto que en nuestro sistema es crucial el tiempo,
# no debemos superar el umbral marcado.
#
# INTRODUCIR VALOR EN *MINUTOS*
maxTimeAllowed=30

# Aqui se define qué estructuras de vecindad se van a utilizar en el
# algoritmo. Para saber cuáles son cada uno ver documentación.
#
# USO: escribir los posibles valores separados por comas y sin espacios.
# La estructura de vecindad se definirá según el orden indicado aquí,
# y utilizará un k_max igual al numero de movimientos aquí indicados.
#
# POSIBLES VALORES mov1, mov2, mov3, mov4
neighborStructures=mov1,mov2